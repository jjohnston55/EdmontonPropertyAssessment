{"version":3,"sources":["resources/EDM.png","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PropertyScreen","React","lazy","App","useState","neighbourhoodText","setNeighbourhoodText","property","setProperty","properties","setProperties","neighbourhoods","setNeighbourhoods","selectedNeighbourhood","setSelectedNeighbourhood","showProperty","setShowProperty","useEffect","fetch","then","resp","json","data","undefined","neighbourhood_number","length","neighbourhood","find","n","name","toUpperCase","Container","Col","className","Row","Image","src","logoSrc","alt","Input","list","placeholder","onChange","event","target","value","id","map","descriptive_name","accountNumber","address","options","querySelectorAll","forEach","option","text","p","account_number","house_number","street_name","suite","Button","onClick","LinkRow","href","rel","fallback","styled","div","input","button","img","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93d623df.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/EDM.770ac9ea.png\";","import React, { ChangeEvent, Suspense, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Neighbourhood, Property } from \"./utils/types\";\r\nimport logoSrc from \"./resources/EDM.png\";\r\nconst PropertyScreen = React.lazy(() => import(\"./components/PropertyScreen\"));\r\n\r\nexport default function App() {\r\n\tconst [neighbourhoodText, setNeighbourhoodText] = useState(\"\");\r\n\tconst [property, setProperty] = useState<Property>();\r\n\tconst [properties, setProperties] = useState<Property[]>([]);\r\n\tconst [neighbourhoods, setNeighbourhoods] = useState<Neighbourhood[]>([]);\r\n\tconst [selectedNeighbourhood, setSelectedNeighbourhood] = useState<Neighbourhood>();\r\n\tconst [showProperty, setShowProperty] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\t// https://data.edmonton.ca/City-Administration/City-of-Edmonton-Neighbourhoods/65fr-66s6\r\n\t\t// https://data.edmonton.ca/resource/65fr-66s6.json = list of neighbourhoods\r\n\t\tfetch(\"https://data.edmonton.ca/resource/65fr-66s6.json\")\r\n\t\t\t.then((resp) => resp.json())\r\n\t\t\t.then((data) => setNeighbourhoods(data));\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (selectedNeighbourhood !== undefined) {\r\n\t\t\t// https://data.edmonton.ca/City-Administration/Property-Assessment-Data-Current-Calendar-Year-/q7d6-ambg\r\n\t\t\t// https://data.edmonton.ca/resource/q7d6-ambg.json = property value\r\n\t\t\tfetch(\r\n\t\t\t\t`https://data.edmonton.ca/resource/q7d6-ambg.json?$limit=50000&neighbourhood_id=${selectedNeighbourhood.neighbourhood_number}`\r\n\t\t\t)\r\n\t\t\t\t.then((resp) => resp.json())\r\n\t\t\t\t.then((data) => setProperties(data));\r\n\t\t}\r\n\t}, [selectedNeighbourhood]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (neighbourhoodText.length > 0) {\r\n\t\t\tconst neighbourhood = neighbourhoods.find(\r\n\t\t\t\t(n) => n.name === neighbourhoodText.toUpperCase()\r\n\t\t\t);\r\n\r\n\t\t\tif (neighbourhood) {\r\n\t\t\t\tsetSelectedNeighbourhood(neighbourhood);\r\n\t\t\t} else {\r\n\t\t\t\tsetSelectedNeighbourhood(undefined);\r\n\t\t\t\tsetShowProperty(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetSelectedNeighbourhood(undefined);\r\n\t\t\tsetShowProperty(false);\r\n\t\t}\r\n\t}, [neighbourhoodText, neighbourhoods]);\r\n\r\n\t/**\r\n\t * Updates the state of the NeighbourhoodText with the value of the input\r\n\t * @param event The change event from an input element\r\n\t */\r\n\tconst changeNeighbourhood = (event: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tsetNeighbourhoodText(event.target.value);\r\n\t};\r\n\r\n\t/**\r\n\t * Updates the state of Property with the id of the datalist option\r\n\t * @param event The change event from an input element\r\n\t */\r\n\tconst changeProperty = (event: ChangeEvent<HTMLInputElement>): void => {\r\n\t\tconst address = event.target.value;\r\n\t\tconst options = event.target.list?.querySelectorAll(\"option\");\r\n\t\tlet accountNumber: string;\r\n\r\n\t\tif (options && address.length > 0) {\r\n\t\t\t// Finds the Account Number for the given address\r\n\t\t\toptions.forEach((option) => {\r\n\t\t\t\tif (option.text.toUpperCase() === address.toUpperCase()) {\r\n\t\t\t\t\taccountNumber = option.id;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t// Finds the existing property from the Account Number\r\n\t\t\tconst property = properties.find((p) => p.account_number === accountNumber);\r\n\t\t\tif (property) {\r\n\t\t\t\tsetProperty(property);\r\n\t\t\t} else {\r\n\t\t\t\tsetProperty(undefined);\r\n\t\t\t\tsetShowProperty(false);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetProperty(undefined);\r\n\t\t\tsetShowProperty(false);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * Enables the SetShowProperty state if the Property state is not undefined\r\n\t */\r\n\tconst seeProperty = (): void => {\r\n\t\tif (property) {\r\n\t\t\tsetShowProperty(true);\r\n\t\t}\r\n\t};\r\n\r\n\tconst reset = (): void => {\r\n\t\tsetProperty(undefined);\r\n\t\tsetNeighbourhoodText(\"\");\r\n\t\tsetShowProperty(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Col className={!showProperty ? \"fullscreen light\" : \"light\"}>\r\n\t\t\t\t<Row className=\"top\">\r\n\t\t\t\t\t<Image src={logoSrc} alt=\"Edmonton.png\" />\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<h2>See Your Assessed Property Value:</h2>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\tlist=\"neighbourhoods\"\r\n\t\t\t\t\t\tplaceholder=\"Enter Neighbourhood Name..\"\r\n\t\t\t\t\t\tonChange={changeNeighbourhood}\r\n\t\t\t\t\t\tvalue={neighbourhoodText}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<datalist id=\"neighbourhoods\">\r\n\t\t\t\t\t\t{neighbourhoods.length > 0 &&\r\n\t\t\t\t\t\t\tneighbourhoods.map((neighbourhood) => (\r\n\t\t\t\t\t\t\t\t<option key={neighbourhood.neighbourhood_number}>\r\n\t\t\t\t\t\t\t\t\t{neighbourhood.descriptive_name}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t</datalist>\r\n\t\t\t\t</Row>\r\n\r\n\t\t\t\t{selectedNeighbourhood && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\t\tlist=\"properties\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Your Address..\"\r\n\t\t\t\t\t\t\t\tonChange={changeProperty}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<datalist id=\"properties\">\r\n\t\t\t\t\t\t\t\t{properties.length > 0 &&\r\n\t\t\t\t\t\t\t\t\tproperties.map((property) => (\r\n\t\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\t\tkey={property.account_number}\r\n\t\t\t\t\t\t\t\t\t\t\tid={property.account_number}>\r\n\t\t\t\t\t\t\t\t\t\t\t{property.house_number} {property.street_name}{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{property.suite ? `Suite ${property.suite}` : \"\"}\r\n\t\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</datalist>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t{!showProperty ? (\r\n\t\t\t\t\t\t\t\t<Button onClick={seeProperty}>View Property</Button>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<Button onClick={reset}>Reset</Button>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\t<LinkRow>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://data.edmonton.ca/City-Administration/Property-Assessment-Data-Current-Calendar-Year-/q7d6-ambg\"\r\n\t\t\t\t\t\trel=\"noreferrer noopenner\"\r\n\t\t\t\t\t\ttarget=\"_blank\">\r\n\t\t\t\t\t\tProperty Data Source\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a href=\"https://jeffjohnston.dev/\" rel=\"noreferrer noopenner\" target=\"_blank\">\r\n\t\t\t\t\t\tMy Portfolio\r\n\t\t\t\t\t</a>\r\n\t\t\t\t\t<a\r\n\t\t\t\t\t\thref=\"https://data.edmonton.ca/City-Administration/City-of-Edmonton-Neighbourhoods/65fr-66s6\"\r\n\t\t\t\t\t\trel=\"noreferrer noopenner\"\r\n\t\t\t\t\t\ttarget=\"_blank\">\r\n\t\t\t\t\t\tNeighbourhood Data Source\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</LinkRow>\r\n\t\t\t</Col>\r\n\t\t\t{showProperty && property && selectedNeighbourhood && (\r\n\t\t\t\t<Col className=\"slide-in-right\">\r\n\t\t\t\t\t<Suspense fallback={<span>loading</span>}>\r\n\t\t\t\t\t\t<PropertyScreen property={property} neighbourhood={selectedNeighbourhood} />\r\n\t\t\t\t\t</Suspense>\r\n\t\t\t\t</Col>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst Container = styled.div`\r\n\talign-items: center;\r\n\tcolor: white;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\theight: 100vh;\r\n\twidth: 100%;\r\n\r\n\t.light {\r\n\t\tbackground-color: #0081bc;\r\n\t\twidth: 40%;\r\n\t\ttransition: width 1.2s;\r\n\t\tbox-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.2);\r\n\t\tz-index: 1;\r\n\r\n\t\t.top {\r\n\t\t\tmargin-top: 20vh;\r\n\t\t}\r\n\r\n\t\t@media screen and (max-width: 1024px) {\r\n\t\t\twidth: 50%;\r\n\t\t}\r\n\r\n\t\t@media screen and (max-width: 768px) {\r\n\t\t\twidth: 100%;\r\n\t\t\theight: fit-content;\r\n\r\n\t\t\t.top {\r\n\t\t\t\tmargin-top: 2rem;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t.slide-in-right {\r\n\t\t-webkit-animation: slide-in-right 1.2s cubic-bezier(0.39, 0.575, 0.565, 1) 0.5 both;\r\n\t\tanimation: slide-in-right 1.2s cubic-bezier(0.39, 0.575, 0.565, 1) 0.5s both;\r\n\t}\r\n\r\n\t.fullscreen {\r\n\t\twidth: 100%;\r\n\r\n\t\t@media screen and (max-width: 768px) {\r\n\t\t\theight: 100%;\r\n\t\t}\r\n\t}\r\n\r\n\t@-webkit-keyframes slide-in-right {\r\n\t\t0% {\r\n\t\t\t-webkit-transform: translateX(1000px);\r\n\t\t\ttransform: translateX(1000px);\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-transform: translateX(0);\r\n\t\t\ttransform: translateX(0);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\t@keyframes slide-in-right {\r\n\t\t0% {\r\n\t\t\t-webkit-transform: translateX(1000px);\r\n\t\t\ttransform: translateX(1000px);\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-transform: translateX(0);\r\n\t\t\ttransform: translateX(0);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 768px) {\r\n\t\tflex-direction: column;\r\n\t}\r\n`;\r\n\r\nconst Col = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\talign-items: center;\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\ttransition: width 1.2s, height 1.2s;\r\n\r\n\t.scale-in-ver-top {\r\n\t\t-webkit-animation: scale-in-ver-top 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\r\n\t\tanimation: scale-in-ver-top 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) both;\r\n\t}\r\n\r\n\t@-webkit-keyframes scale-in-ver-top {\r\n\t\t0% {\r\n\t\t\t-webkit-transform: scaleY(0);\r\n\t\t\ttransform: scaleY(0);\r\n\t\t\t-webkit-transform-origin: 100% 0%;\r\n\t\t\ttransform-origin: 100% 0%;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-transform: scaleY(1);\r\n\t\t\ttransform: scaleY(1);\r\n\t\t\t-webkit-transform-origin: 100% 0%;\r\n\t\t\ttransform-origin: 100% 0%;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\t@keyframes scale-in-ver-top {\r\n\t\t0% {\r\n\t\t\t-webkit-transform: scaleY(0);\r\n\t\t\ttransform: scaleY(0);\r\n\t\t\t-webkit-transform-origin: 100% 0%;\r\n\t\t\ttransform-origin: 100% 0%;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-transform: scaleY(1);\r\n\t\t\ttransform: scaleY(1);\r\n\t\t\t-webkit-transform-origin: 100% 0%;\r\n\t\t\ttransform-origin: 100% 0%;\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst Row = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tmargin: 10px;\r\n\ttext-align: center;\r\n\twidth: calc(100% - 20px);\r\n\r\n\ta {\r\n\t\tcolor: white;\r\n\t\tdisplay: block;\r\n\t\tfont-size: 0.8rem;\r\n\t\twidth: 40%;\r\n\t}\r\n\r\n\t@media screen and (max-width: 1024px) {\r\n\t\th2 {\r\n\t\t\tfont-size: 1.2rem;\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 425px) {\r\n\t\th2 {\r\n\t\t\tfont-size: 1.2rem;\r\n\t\t\tmargin: 0;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst LinkRow = styled(Row)`\r\n\tflex-direction: row;\r\n\tjustify-content: space-evenly;\r\n\tmax-width: 500px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n\tborder: 0;\r\n\tborder-radius: 10px;\r\n\tfont-size: 18px;\r\n\theight: 21px;\r\n\tmax-width: 500px;\r\n\tpadding: 10px;\r\n\twidth: calc(80% - 20px);\r\n\r\n\t@media screen and (max-width: 768px) {\r\n\t\tfont-size: 16px;\r\n\t\theight: 16px;\r\n\t}\r\n`;\r\n\r\nconst Button = styled.button`\r\n\tbackground-color: white;\r\n\tborder: 0;\r\n\tborder-radius: 10px;\r\n\tcursor: pointer;\r\n\tfont-size: 18px;\r\n\theight: 41px;\r\n\tpadding: 10px;\r\n\twidth: 10rem;\r\n\r\n\t@media screen and (max-width: 768px) {\r\n\t\tfont-size: 16px;\r\n\t\theight: 32px;\r\n\t\twidth: 8rem;\r\n\t\tpadding: 8px;\r\n\t}\r\n`;\r\n\r\nconst Image = styled.img`\r\n\tmax-width: 960px;\r\n\twidth: 25vw;\r\n\tmargin-left: 5px;\r\n\tmargin-right: 5px;\r\n\theight: auto;\r\n\r\n\t@media screen and (max-width: 768px) {\r\n\t\twidth: 50vw;\r\n\t}\r\n`;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}