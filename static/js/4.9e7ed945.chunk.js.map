{"version":3,"sources":["components/Card.tsx","components/Map.tsx","components/PropertyScreen.tsx"],"names":["Card","title","description","Container","className","styled","div","Map","coordinate","lat","latitude","lng","longitude","MapContainer","id","bootstrapURLKeys","key","language","libraries","center","onGoogleApiLoaded","map","maps","Marker","position","renderMarker","yesIWantToUseGoogleMapApiInternals","zoom","PropertyScreen","property","neighbourhood","avg","formatter","Intl","NumberFormat","currency","style","Row","parseFloat","CardRow","descriptive_name","format","assessed_value","Description","p"],"mappings":"oOAUe,SAASA,EAAT,GAAkD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,YACrC,OACC,eAACC,EAAD,WACC,oBAAIC,UAAU,kBAAd,SAAiCH,IACjC,oBAAIG,UAAU,kBAAd,SAAiCF,OAKpC,I,EAAMC,EAAYE,IAAOC,IAAV,64C,QCRA,SAASC,EAAT,GAAiD,IACzDC,EAAa,CAClBC,IAF6D,EAAjCC,SAG5BC,IAH6D,EAAvBC,WAmBvC,OACC,cAACC,EAAD,CAAcC,GAAG,MAAjB,SACC,cAAC,IAAD,CACCC,iBAAkB,CACjBC,IAAK,GACLC,SAAU,KACVC,UAAW,CAAC,WAEbC,OAAQX,EACRY,kBAAmB,mBAjBD,SAACC,EAAUC,GAK/B,OAJa,IAAIA,EAAKC,OAAO,CAC5BC,SAAUhB,EACVa,QAcuCI,CAAnB,EAAGJ,IAAH,EAAQC,OAC3BI,oCAAkC,EAClCC,KAAM,OAMV,I,QAAMd,EAAeR,IAAOC,IAAV,0GChCH,SAASsB,EAAT,GAA0E,IAAhDC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,IAC3DC,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAChDC,SAAU,MACVC,MAAO,aAGR,OACC,eAAC,EAAD,WACC,cAACC,EAAD,UACC,qBAAKjC,UAAU,MAAf,SACC,cAACG,EAAD,CACCG,SAAU4B,WAAWT,EAASnB,UAC9BE,UAAW0B,WAAWT,EAASjB,iBAIlC,eAAC2B,EAAD,WACC,cAACvC,EAAD,CAAME,YAAa4B,EAAcU,iBAAkBvC,MAAM,kBACzD,cAACD,EAAD,CACCE,YAAa8B,EAAUS,OAAOZ,EAASa,gBACvCzC,MAAM,mBAEP,cAACD,EAAD,CAAME,YAAa8B,EAAUS,OAAOV,GAAM9B,MAAM,6BAEjD,cAACoC,EAAD,UACEP,EAAc5B,YACd,cAACyC,EAAD,UAAcb,EAAc5B,cAE5B,cAACyC,EAAD,mEAOL,IAAMxC,EAAYE,IAAOC,IAAV,qHAOT+B,EAAMhC,IAAOC,IAAV,2QAiBHiC,EAAUlC,YAAOgC,EAAPhC,CAAH,sEAKPsC,EAActC,IAAOuC,EAAV","file":"static/js/4.9e7ed945.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ntype CardProps = {\r\n\t/** the title of the card */\r\n\ttitle: string;\r\n\t/** the content of the card */\r\n\tdescription: string;\r\n};\r\n\r\nexport default function Card({ title, description }: CardProps) {\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<h3 className=\"focus-in-expand\">{title}</h3>\r\n\t\t\t<h2 className=\"focus-in-expand\">{description}</h2>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst Container = styled.div`\r\n\tmargin: 0.5rem;\r\n\tbackground-color: rgba(255, 255, 255, 0.288);\r\n\tborder-radius: 5px;\r\n\tbox-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.2);\r\n\tpadding: 0 25px;\r\n\r\n\th3 {\r\n\t\tmargin: 15px;\r\n\t\tfont-weight: 100;\r\n\t\tfont-size: 1.5rem;\r\n\t}\r\n\r\n\th2 {\r\n\t\tmargin: 15px;\r\n\t\tfont-weight: 500;\r\n\t\tfont-size: 1.8rem;\r\n\t}\r\n\r\n\t.focus-in-expand {\r\n\t\t-webkit-animation: focus-in-expand 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 1s both;\r\n\t\tanimation: focus-in-expand 1s cubic-bezier(0.25, 0.46, 0.45, 0.94) 1s both;\r\n\t}\r\n\r\n\t@-webkit-keyframes focus-in-expand {\r\n\t\t0% {\r\n\t\t\tletter-spacing: -0.5em;\r\n\t\t\t-webkit-filter: blur(12px);\r\n\t\t\tfilter: blur(12px);\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-filter: blur(0px);\r\n\t\t\tfilter: blur(0px);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t@keyframes focus-in-expand {\r\n\t\t0% {\r\n\t\t\tletter-spacing: -0.5em;\r\n\t\t\t-webkit-filter: blur(12px);\r\n\t\t\tfilter: blur(12px);\r\n\t\t\topacity: 0;\r\n\t\t}\r\n\t\t100% {\r\n\t\t\t-webkit-filter: blur(0px);\r\n\t\t\tfilter: blur(0px);\r\n\t\t\topacity: 1;\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 1024px) {\r\n\t\tpadding: 0 10px;\r\n\r\n\t\th3 {\r\n\t\t\tfont-size: 1.1rem;\r\n\t\t}\r\n\t\th2 {\r\n\t\t\tfont-size: 1.2rem;\r\n\t\t}\r\n\t}\r\n\r\n\t@media screen and (max-width: 425px) {\r\n\t\tpadding: 0 5px;\r\n\t\tmax-width: 50%;\r\n\t\th3 {\r\n\t\t\tfont-size: 0.9rem;\r\n\t\t}\r\n\t\th2 {\r\n\t\t\tfont-size: 1rem;\r\n\t\t}\r\n\t}\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\ntype MapProps = {\r\n\t/** latitude of the property */\r\n\tlatitude: number;\r\n\t/** longitude of the property */\r\n\tlongitude: number;\r\n};\r\n\r\nexport default function Map({ latitude, longitude }: MapProps) {\r\n\tconst coordinate = {\r\n\t\tlat: latitude,\r\n\t\tlng: longitude,\r\n\t};\r\n\r\n\t/**\r\n\t * Will render the default Google Maps marker on the map\r\n\t * @param map The map object where the marker will be placed\r\n\t * @param maps To access the Google Maps API\r\n\t */\r\n\tconst renderMarker = (map: any, maps: any): void => {\r\n\t\tlet marker = new maps.Marker({\r\n\t\t\tposition: coordinate,\r\n\t\t\tmap,\r\n\t\t});\r\n\t\treturn marker;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<MapContainer id=\"map\">\r\n\t\t\t<GoogleMapReact\r\n\t\t\t\tbootstrapURLKeys={{\r\n\t\t\t\t\tkey: \"\",\r\n\t\t\t\t\tlanguage: \"en\",\r\n\t\t\t\t\tlibraries: [\"places\"],\r\n\t\t\t\t}}\r\n\t\t\t\tcenter={coordinate}\r\n\t\t\t\tonGoogleApiLoaded={({ map, maps }) => renderMarker(map, maps)}\r\n\t\t\t\tyesIWantToUseGoogleMapApiInternals\r\n\t\t\t\tzoom={15}\r\n\t\t\t/>\r\n\t\t</MapContainer>\r\n\t);\r\n}\r\n\r\nconst MapContainer = styled.div`\r\n\tbox-shadow: 0 0 1rem 0 rgba(0, 0, 0, 0.2);\r\n\theight: 100%;\r\n\twidth: 100;\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Neighbourhood, Property } from \"../utils/types\";\r\nimport Card from \"./Card\";\r\nimport Map from \"./Map\";\r\n\r\ntype PropertyProps = {\r\n\t/** the property object being displayed */\r\n\tproperty: Property;\r\n\t/** the neighbourhood object of the corresponding property being displayed */\r\n\tneighbourhood: Neighbourhood;\r\n\t/** the average property value for the neighbourhood */\r\n\tavg: number;\r\n};\r\n\r\nexport default function PropertyScreen({ property, neighbourhood, avg }: PropertyProps) {\r\n\tconst formatter = new Intl.NumberFormat(\"en-CA\", {\r\n\t\tcurrency: \"CAD\",\r\n\t\tstyle: \"currency\",\r\n\t});\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t<div className=\"map\">\r\n\t\t\t\t\t<Map\r\n\t\t\t\t\t\tlatitude={parseFloat(property.latitude)}\r\n\t\t\t\t\t\tlongitude={parseFloat(property.longitude)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</Row>\r\n\t\t\t<CardRow>\r\n\t\t\t\t<Card description={neighbourhood.descriptive_name} title=\"Neighbourhood\" />\r\n\t\t\t\t<Card\r\n\t\t\t\t\tdescription={formatter.format(property.assessed_value)}\r\n\t\t\t\t\ttitle=\"Assessed Value\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Card description={formatter.format(avg)} title=\"Neighbourhood Average\" />\r\n\t\t\t</CardRow>\r\n\t\t\t<Row>\r\n\t\t\t\t{neighbourhood.description ? (\r\n\t\t\t\t\t<Description>{neighbourhood.description}</Description>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Description>No description available for this neighbourhood</Description>\r\n\t\t\t\t)}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t);\r\n}\r\n\r\nconst Container = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst Row = styled.div`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-evenly;\r\n\r\n\t.map {\r\n\t\twidth: 100%;\r\n\t\theight: 450px;\r\n\r\n\t\t@media screen and (max-width: 768px) {\r\n\t\t\theight: 200px;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nconst CardRow = styled(Row)`\r\n\tflex-wrap: wrap;\r\n\tpadding: 0.5rem 0;\r\n`;\r\n\r\nconst Description = styled.p`\r\n\tfont-size: 1.4rem;\r\n\ttext-align: justify;\r\n\tmargin: 0 1.5rem;\r\n\tfont-weight: 300;\r\n\r\n\t@media screen and (max-width: 1024px) {\r\n\t\tfont-size: 1.2rem;\r\n\t}\r\n`;\r\n"],"sourceRoot":""}